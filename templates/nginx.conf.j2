user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    upstream routing {
        {% for host in groups['routing'] %}
        server {{ hostvars[host]['ansible_host'] }}:{{ HTTP_PORT | default(80) }};
        {% endfor %}
    }

    upstream search {
        {% for host in groups['search']%}
        server {{ hostvars[host]['ansible_host'] }}:{{ HTTP_PORT | default(80) }};
        {% endfor %}
    }

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    #include /etc/nginx/conf.d/*.conf;

    proxy_cache_path /var/cache/nginx/tileserver
                     keys_zone=TileserverCache:50m
                     levels=1:2
                     inactive=1h
                     max_size=10g;

    server {
        listen 80;
        {% if DOMAIN is defined %}
        server_name {{ DOMAIN }};
        {% endif %}

        proxy_connect_timeout 10s;
        proxy_read_timeout 10s;
        proxy_send_timeout 10s;

        add_header X-CSE356 {{ SUBMISSION_ID | default("FIX_ME") }};

        location @error401 {
            return 401;
        }

        location /tiles {
            # Don't need auth for tiles?
            #auth_request /auth;
            #auth_request_set $auth_status $upstream_status;
            #
            ## send 401 page if unauthorized
            #error_page 401 = @error401;
            
            # change to tileserver url
            #proxy_pass http://host.docker.internal:8081/styles/osm-bright/256;
            #proxy_pass http://localhost:8081/styles/osm-bright/256;
            proxy_pass http://localhost:8081/styles/maptiler-toner-gl/256;

            proxy_cache TileserverCache;
            proxy_cache_valid 200 1h;

            # for testing purposes
            {% if SUBMISSION_ID is defined %}
            add_header X-CSE356 {{ SUBMISSION_ID }};
            {% endif %}
            add_header X-Cache-Status $upstream_cache_status;
        }
        
        location /api/route {
            proxy_pass http://routing;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_pass_request_body on;
            proxy_set_header Content-Type "application/json";
        }

        location ~* ^/api/(search|address) {
            proxy_pass http://search;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Original-URI $request_uri;

            proxy_pass_request_body on;
            proxy_set_header Content-Type "application/json";
        }
    }

}

{% set worker_connections = 4096 %}

user  nginx;
worker_processes  auto;
worker_rlimit_nofile {{ worker_connections * 2}};

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections {{ worker_connections }};
}

http {
    upstream auth {
        keepalive {{ groups['auth'] | length * 2 }};
        {% for host in groups['auth'] %}
        server {{ hostvars[host]['ansible_host'] }}:{{ hostvars[host]['http_port'] | default(8000) }};
        {% endfor %}
    }

    upstream search {
        keepalive {{ groups['search'] | length * 2 }};
        {% for host in groups['search'] %}
        server {{ hostvars[host]['ansible_host'] }}:{{ hostvars[host]['http_port'] | default(8001) }};
        {% endfor %}
    }

    upstream tiles {
        keepalive {{ groups['tiles'] | length * 2 }};
        {% for host in groups['tiles'] %}
        server {{ hostvars[host]['ansible_host'] }}:{{ hostvars[host]['http_port'] | default(8002) }};
        {% endfor %}
    }

    upstream tileserver {
        keepalive {{ groups['tiles'] | length * 2 }};
        {% for host in groups['tiles'] %}
        server {{ hostvars[host]['ansible_host'] }}; 
        {% endfor %}
    }

    upstream route {
        keepalive {{ groups['route'] | length * 2 }};
        {% for host in groups['route'] %}
        server {{ hostvars[host]['ansible_host'] }}:{{ hostvars[host]['http_port'] | default(8003) }};
        {% endfor %}
    }

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;

    keepalive_timeout  65;

    server {
        listen 80;
        {% if DOMAIN is defined %}
        server_name {{ DOMAIN }};
        {% endif %}

        root /usr/share/nginx/html;
        index index.html index.htm;

        proxy_connect_timeout 10s;
        proxy_read_timeout 10s;
        proxy_send_timeout 10s;

        proxy_next_upstream error timeout http_500 http_502 http_503 http_504; 

        add_header X-CSE356 {{ SUBMISSION_ID | default("FIX_ME") }};

        location @error401 {
            return 401;
        }
        
        location /auth/verify_session {
            internal;
            proxy_pass http://auth;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "keep-alive";
            proxy_set_header Cookie $http_cookie;
            proxy_set_header X-Original-URI $request_uri;
        }

        location ~* ^/api/(adduser|login|logout|user|verify) {
            proxy_pass http://auth;
            proxy_pass_request_body on;
            proxy_set_header Host $host;
            proxy_set_header Content-Type "application/json";
            proxy_set_header Cookie $http_cookie;
        }

        location ~* ^/api/(search|address) {
            {# auth_request /auth/verify_session; 
            auth_request_set $auth_status $upstream_status; 
            error_page 401 = @error401; #}

            proxy_http_version 1.1;
            proxy_pass http://search;
            proxy_pass_request_body on;
            proxy_set_header Host $host;
            proxy_set_header Content-Type "application/json";
            proxy_set_header Cookie $http_cookie;
            proxy_set_header Connection "keep-alive";
        }

        location /tiles {
            proxy_http_version 1.1;
            proxy_pass http://tileserver;
            proxy_pass_request_body off; 
            proxy_set_header Connection "keep-alive";
        }

        location /turn {
            proxy_http_version 1.1;
            proxy_pass http://tiles;
            proxy_pass_request_body off; 
            proxy_set_header Connection "keep-alive";
        }

        location /convert {
            {# auth_request /auth/verify_session; 
            auth_request_set $auth_status $upstream_status; 
            error_page 401 = @error401; #}

            proxy_http_version 1.1;
            proxy_pass http://tiles;
            proxy_pass_request_body on;
            proxy_set_header Host $host;
            proxy_set_header Content-Type "application/json";
            proxy_set_header Cookie $http_cookie;
            proxy_set_header Connection "keep-alive";
        }

        location /api/route {
            {# auth_request /auth/verify_session; 
            auth_request_set $auth_status $upstream_status; 
            error_page 401 = @error401; #}

            proxy_http_version 1.1;
            proxy_pass http://route;
            proxy_pass_request_body on;
            proxy_set_header Host $host;
            proxy_set_header Content-Type "application/json";
            proxy_set_header Cookie $http_cookie;
            proxy_set_header Connection "keep-alive";
        }
    }

}

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    upstream auth {
        {% for host in groups['auth'] %}
        server {{ hostvars[host]['ansible_host'] }}:{{ hostvars[host]['http_port'] | default(8000) }};
        {% endfor %}
    }

    upstream routing {
        {% for host in groups['routing'] %}
        server {{ hostvars[host]['ansible_host'] }}:{{ hostvars[host]['http_port'] | default(8000) }};
        {% endfor %}
    }

    {# upstream search {
        {% for host in groups['search']%}
        server {{ hostvars[host]['ansible_host'] }}:{{ hostvars[host]['http_port'] | default(8000) }};
        {% endfor %}
    } #}

    upstream tiles {
        {% for host in groups['tiles'] %}
        server {{ hostvars[host]['ansible_host'] }}:{{ hostvars[host]['http_port'] | default(8000) }};
        {% endfor %}
    }

    upstream tileserver {
        {% for host in groups['tiles'] %}
        server {{ hostvars[host]['ansible_host'] }}:8081;
        {% endfor %}
    }

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    #include /etc/nginx/conf.d/*.conf;

    proxy_cache_path /var/cache/nginx/tileserver
                     keys_zone=TileserverCache:50m
                     levels=1:2
                     inactive=1h
                     max_size=10g;

    server {
        listen 80;
        {% if DOMAIN is defined %}
        server_name {{ DOMAIN }};
        {% endif %}

        root /usr/share/nginx/html;
        index index.html index.htm;

        proxy_connect_timeout 10s;
        proxy_read_timeout 10s;
        proxy_send_timeout 10s;

        add_header X-CSE356 {{ SUBMISSION_ID | default("FIX_ME") }};

        location @error401 {
            return 401;
        }
        
        location /auth/verify_session {
            internal;
            proxy_pass http://auth;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header Cookie $http_cookie;
            proxy_set_header X-Original-URI $request_uri;
        }

        location ~* ^/api/(adduser|login|logout|user|verify) {
            proxy_pass http://auth;
            proxy_pass_request_body on;
            proxy_set_header Host $host;
            proxy_set_header Content-Type "application/json";
            proxy_set_header Cookie $http_cookie;
        }

        location /api/route {
            auth_request /auth/verify_session; 
            auth_request_set $auth_status $upstream_status; 
            error_page 401 = @error401;

            proxy_pass http://routing;
            proxy_pass_request_body on;
            proxy_set_header Host $host;
            proxy_set_header Content-Type "application/json";
            proxy_set_header Cookie $http_cookie;
        }

        {# location ~* ^/api/(search|address) {
            auth_request /auth/verify_session; 
            auth_request_set $auth_status $upstream_status; 
            error_page 401 = @error401;

            proxy_pass http://search;
            proxy_pass_request_body on;
            proxy_set_header Host $host;
            proxy_set_header Content-Type "application/json";
            proxy_set_header Cookie $http_cookie;
        } #}

        location /tiles {
            # auth_request /auth/verify_session;
            # auth_request_set $auth_status $upstream_status;
            # error_page 401 = @error401;

            proxy_pass http://tileserver/styles/osm-bright/256;
            proxy_cache TileserverCache;
            proxy_cache_valid 200 1h;
        }

        location /turn {
            # auth_request /auth/verify_session;
            # auth_request_set $auth_status $upstream_status;
            # error_page 401 = @error401;

            proxy_pass http://tiles;
            proxy_pass_request_body off; 
            proxy_set_header Host $host;
            proxy_set_header Cookie $http_cookie;
        }

        location /convert {
            auth_request /auth/verify_session; 
            auth_request_set $auth_status $upstream_status; 
            error_page 401 = @error401;

            proxy_pass http://tiles;
            proxy_pass_request_body on;
            proxy_set_header Host $host;
            proxy_set_header Content-Type "application/json";
            proxy_set_header Cookie $http_cookie;
        }
    }

}
